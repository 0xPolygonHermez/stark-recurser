<%  let prefixStark_ = prefixStark ? `${prefixStark}_` : ""; -%>
<%  let prefix_ = prefix ? `${prefix}_` : ""; -%>


    <%- componentName %>.globalChallenge <== globalChallenge;

    // --> Assign the VADCOP data
<%  let circuitType = (vadcopInfo.air_groups.length > 1 || vadcopInfo.airs[0].length > 1) ? starkInfo.airId + 2 : starkInfo.airId + 1; -%>
    <%- prefix_ %>circuitType <== <%- circuitType %>;
    
<%  if(vadcopInfo.aggTypes[airgroupId].length > 0) { -%>
    <%- prefix_ %>aggregationTypes <== [<%- vadcopInfo.aggTypes[airgroupId].map(a => a.aggType).join(",") %>];
<%  } -%>

<%  if(vadcopInfo.aggTypes[airgroupId].length > 0) { -%>
<%      for (let i = 0; i < vadcopInfo.aggTypes[airgroupId].length; ++i) { -%>
    <%- prefix_ %>airgroupvalues[<%- i %>] <== <%- prefixStark_ %>airgroupvalues[<%- i %>];
<%      } -%>
<%  } -%>

<%  if(starkInfo.airValuesMap.filter(a => a.stage == 1).length > 0) { -%>
    <%- prefix_ %>stage1HashToEC <== CalculateStage1HashToEC()(<%- componentName %>.rootC, <%- prefixStark_%>root1, <%- prefixStark_ %>airvalues);
<%  } else { -%>
    <%- prefix_ %>stage1HashToEC <== CalculateStage1HashToEC()(<%- componentName %>.rootC, <%- prefixStark_%>root1);
<%  } -%>