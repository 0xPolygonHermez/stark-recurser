pragma circom 2.1.0;
pragma custom_templates;

include "iszero.circom";
<% for (let i = 0; i < verifierFilenames.length; ++i) { -%>
include "<%- verifierFilenames[i] %>";
<% } -%>


<%  if(!options.hasCompressor) { -%>
<%-   include('src/vadcop/helpers/templates/calculate_hashes.circom.ejs', { starkInfo, vadcopInfo }); %>
<%  } -%>

<%  let publicsNames = []; -%>
template Recursive1() {

<%- include('src/main_templates/vadcop/define_vadcop_inputs.circom.ejs', { vadcopInfo, airgroupId, prefix: "sv", starkInfo, options: { ...options, publicsNames, isInput: options.hasCompressor ? true : false  } }); %>

<%- include('src/main_templates/define_stark_inputs.circom.ejs', { prefix: "", starkInfo, nPublics: vadcopInfo.nPublics, options: { addPublics: false } }); %>

<%  if(vadcopInfo.nPublics > 0) { -%>
    signal input publics[<%- vadcopInfo.nPublics %>];
<%  } -%>
    
<%  if(vadcopInfo.numProofValues > 0) { -%>
    signal input proofValues[<%- vadcopInfo.numProofValues %>][3];
<%  } -%>
    
    signal input globalChallenge[3];

    signal input rootCAgg[4];

<%- include('src/main_templates/assign_stark_inputs.circom.ejs', { componentName: "sV", prefix: "", starkInfo, nPublics: vadcopInfo.nPublics, options: { addPublics: options.hasCompressor ? false : true } }); %>
    
<%  if(!options.hasCompressor) { -%>
<%- include('src/main_templates/vadcop/init_vadcop_inputs.circom.ejs', { componentName: "sV", prefix: "sv", prefixStark: "", airgroupId, starkInfo, vadcopInfo }); %>
<%  } else { -%>
<%- include('src/main_templates/vadcop/assign_vadcop_inputs.circom.ejs', { componentName: "sV", vadcopInfo, prefix: "sv", prefixStark: "", airgroupId, options: { addPrefixAggTypes: true } }); %>
<%  } -%>
}

<%  let pubNames = []; -%>
<%  if(options.hasCompressor) { -%>
<%    pubNames.push(...publicsNames); -%>
<%  } -%>
<%    if(vadcopInfo.nPublics > 0) pubNames.push("publics"); -%>
<%    if(vadcopInfo.numProofValues > 0) pubNames.push("proofValues"); -%>
<%    pubNames.push("globalChallenge"); -%>
<%    pubNames.push("rootCAgg"); -%>
    
component main {public [<%- pubNames.join(", ") %>]} = Recursive1();

